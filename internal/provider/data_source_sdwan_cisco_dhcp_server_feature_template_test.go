// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceSdwanCiscoDHCPServerFeatureTemplate(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceSdwanCiscoDHCPServerFeatureTemplateConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "address_pool", "10.1.1.0/24"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "lease_time", "600"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "interface_mtu", "1500"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "domain_name", "cisco.com"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "default_gateway", "10.1.1.254"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "static_leases.0.mac_address", "11:11:11:11:11:11"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "static_leases.0.ip_address", "10.1.1.10"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "static_leases.0.hostname", "HOST1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "options.0.option_code", "10"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_dhcp_server_feature_template.test", "options.0.ascii", "abc"),
				),
			},
		},
	})
}

const testAccDataSourceSdwanCiscoDHCPServerFeatureTemplateConfig = `

resource "sdwan_cisco_dhcp_server_feature_template" "test" {
  name = "TF_TEST_MIN"
  description = "Terraform integration test"
  device_types = ["vedge-C8000V"]
  address_pool = "10.1.1.0/24"
  exclude_addresses = ["10.1.1.1-10.1.1.5", "10.1.1.254"]
  lease_time = 600
  interface_mtu = 1500
  domain_name = "cisco.com"
  default_gateway = "10.1.1.254"
  dns_servers = ["1.2.3.4"]
  tftp_servers = ["1.2.3.4"]
  static_leases = [{
    mac_address = "11:11:11:11:11:11"
    ip_address = "10.1.1.10"
    hostname = "HOST1"
  }]
  options = [{
    option_code = 10
    ascii = "abc"
  }]
}

data "sdwan_cisco_dhcp_server_feature_template" "test" {
  id = sdwan_cisco_dhcp_server_feature_template.test.id
}
`
