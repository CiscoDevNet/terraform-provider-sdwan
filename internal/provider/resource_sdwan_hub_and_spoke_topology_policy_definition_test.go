// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccSdwanHubAndSpokeTopologyPolicyDefinition(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccSdwanHubAndSpokeTopologyPolicyDefinitionConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sdwan_hub_and_spoke_topology_policy_definition.test", "vpn_list_id", "04fcbb0b-efbf-43d2-a04b-847d3a7b104e"),
					resource.TestCheckResourceAttr("sdwan_hub_and_spoke_topology_policy_definition.test", "topologies.0.name", "Topology1"),
					resource.TestCheckResourceAttr("sdwan_hub_and_spoke_topology_policy_definition.test", "topologies.0.spokes.0.site_list_id", "e858e1c4-6aa8-4de7-99df-c3adbf80290d"),
					resource.TestCheckResourceAttr("sdwan_hub_and_spoke_topology_policy_definition.test", "topologies.0.spokes.0.hubs.0.site_list_id", "e858e1c4-6aa8-4de7-99df-c3adbf80290d"),
				),
			},
		},
	})
}

func testAccSdwanHubAndSpokeTopologyPolicyDefinitionConfig_all() string {
	return `
	resource "sdwan_hub_and_spoke_topology_policy_definition" "test" {
		name = "TF_TEST_ALL"
		description = "Terraform integration test"
		vpn_list_id = "04fcbb0b-efbf-43d2-a04b-847d3a7b104e"
		topologies = [{
			name = "Topology1"
			spokes = [{
				site_list_id = "e858e1c4-6aa8-4de7-99df-c3adbf80290d"
				hubs = [{
					site_list_id = "e858e1c4-6aa8-4de7-99df-c3adbf80290d"
				}]
			}]
		}]
	}
	`
}
