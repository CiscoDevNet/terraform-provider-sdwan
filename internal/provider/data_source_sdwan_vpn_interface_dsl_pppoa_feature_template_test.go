// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceSdwanVPNInterfaceDSLPPPoAFeatureTemplate(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceSdwanVPNInterfaceDSLPPPoAFeatureTemplateConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "atm_sub_interface_name", "ATM1"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "shutdown", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "atm_description", "My Description"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "vdsl_configuration.0.controller_vdsl_slot", "Example"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "vdsl_configuration.0.sra", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "vdsl_configuration.0.mode_adsl1", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "vdsl_configuration.0.mode_adsl2", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "vdsl_configuration.0.mode_adsl2plus", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "vdsl_configuration.0.mode_vdsl2", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "vdsl_configuration.0.mode_ansi", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "vdsl_configuration.0.vdsl_modem_configuration", "100"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_vpi_and_vci", "example-vpi"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_vbr_nrt_peak_cell_rate", "1010"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_vbr_nrt_sustainable_cell_rate", "1000"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_vbr_nrt_maximum_burst_size", "65530"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_vbr_rt_peak_cell_rate", "1015"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_vbr_rt_average_cell_rate", "1000"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_vbr_rt_maximum_burst_size", "65530"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_encapsulation_aal5mux", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_encapsulation_aal5nlpid", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_encapsulation_aal5snap", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pvc.0.atm_dialer_pool_member", "100"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "ppp_authentication_protocol", "chap"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "ppp_authentication_protocol_pap", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "chap_hostname", "chap-example"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "chap_ppp_auth_password", "myPassword"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pap_username", "pap-username"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pap_password", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "pap_ppp_auth_password", "myPassword"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "ppp_authentication_type", "callin"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "enable_core_region", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "core_region", "core"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "secondary_region", "off"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_encapsulations.0.encapsulation", "gre"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_encapsulations.0.preference", "4294967"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_encapsulations.0.weight", "250"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_border", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "per_tunnel_qos", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "per_tunnel_qos_aggregator", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_qos_mode", "spoke"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_color", "custom1"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_last_resort_circuit", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_low_bandwidth_link", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_tunnel_tcp_mss", "1460"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_clear_dont_fragment", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_network_broadcast", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_max_control_connections", "8"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_control_connections", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_vbond_as_stun_server", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_vmanage_connection_preference", "5"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_port_hop", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_color_restrict", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_carrier", "carrier1"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_nat_refresh_interval", "15"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_hello_interval", "1000"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_hello_tolerance", "12"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_bind_loopback_tunnel", "12"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_all", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_bgp", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_dhcp", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_dns", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_icmp", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_ssh", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_ntp", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_netconf", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_ospf", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_stun", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_snmp", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tunnel_interface_allow_https", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_refresh_mode", "outbound"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_udp_timeout", "1"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_tcp_timeout", "60"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_block_icmp_error", "true"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_response_to_ping", "false"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_port_forwards.0.port_start_range", "0"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_port_forwards.0.port_end_range", "65530"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_port_forwards.0.protocol", "tcp"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_port_forwards.0.private_vpn", "65530"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "nat_port_forwards.0.private_ip_address", "1.2.3.4"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_adaptive_period", "15"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_adaptive_bandwidth_downstream", "10000"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_adaptive_min_downstream", "100"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_adaptive_max_downstream", "100000"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_adaptive_bandwidth_upstream", "10000"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_adaptive_min_upstream", "100"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_adaptive_max_upstream", "100000"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "shaping_rate", "10000000"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_map", "test"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "qos_map_vpn", "test"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "bandwidth_upstream", "214748300"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "bandwidth_downstream", "214748300"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "write_rule", "RULE1"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "ipv4_access_lists.0.direction", "in"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "ipv4_access_lists.0.acl_name", "ACL1"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "policers.0.direction", "in"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "policers.0.policer_name", "example"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "ip_mtu", "1500"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tcp_mss", "720"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "tloc_extension", "tloc"),
					resource.TestCheckResourceAttr("data.sdwan_vpn_interface_dsl_pppoa_feature_template.test", "ip_directed_broadcast", "true"),
				),
			},
		},
	})
}

const testAccDataSourceSdwanVPNInterfaceDSLPPPoAFeatureTemplateConfig = `

resource "sdwan_vpn_interface_dsl_pppoa_feature_template" "test" {
  name = "TF_TEST_MIN"
  description = "Terraform integration test"
  device_types = ["vedge-C8000V"]
  atm_sub_interface_name = "ATM1"
  shutdown = true
  atm_description = "My Description"
  vdsl_configuration = [{
    controller_vdsl_slot = "Example"
    sra = true
    mode_adsl1 = false
    mode_adsl2 = false
    mode_adsl2plus = false
    mode_vdsl2 = false
    mode_ansi = false
    vdsl_modem_configuration = "100"
  }]
  pvc = [{
    atm_vpi_and_vci = "example-vpi"
    atm_vbr_nrt_peak_cell_rate = 1010
    atm_vbr_nrt_sustainable_cell_rate = 1000
    atm_vbr_nrt_maximum_burst_size = 65530
    atm_vbr_rt_peak_cell_rate = 1015
    atm_vbr_rt_average_cell_rate = 1000
    atm_vbr_rt_maximum_burst_size = 65530
    atm_encapsulation_aal5mux = false
    atm_encapsulation_aal5nlpid = false
    atm_encapsulation_aal5snap = true
    atm_dialer_pool_member = 100
  }]
  ppp_authentication_protocol = "chap"
  ppp_authentication_protocol_pap = false
  chap_hostname = "chap-example"
  chap_ppp_auth_password = "myPassword"
  pap_username = "pap-username"
  pap_password = true
  pap_ppp_auth_password = "myPassword"
  ppp_authentication_type = "callin"
  enable_core_region = true
  core_region = "core"
  secondary_region = "off"
  tunnel_interface_encapsulations = [{
    encapsulation = "gre"
    preference = 4294967
    weight = 250
  }]
  tunnel_interface_groups = [42949672]
  tunnel_interface_border = true
  per_tunnel_qos = true
  per_tunnel_qos_aggregator = false
  tunnel_qos_mode = "spoke"
  tunnel_interface_color = "custom1"
  tunnel_interface_last_resort_circuit = false
  tunnel_interface_low_bandwidth_link = false
  tunnel_interface_tunnel_tcp_mss = 1460
  tunnel_interface_clear_dont_fragment = false
  tunnel_interface_network_broadcast = false
  tunnel_interface_max_control_connections = 8
  tunnel_interface_control_connections = true
  tunnel_interface_vbond_as_stun_server = false
  tunnel_interface_exclude_controller_group_list = [100]
  tunnel_interface_vmanage_connection_preference = 5
  tunnel_interface_port_hop = false
  tunnel_interface_color_restrict = false
  tunnel_interface_carrier = "carrier1"
  tunnel_interface_nat_refresh_interval = 15
  tunnel_interface_hello_interval = 1000
  tunnel_interface_hello_tolerance = 12
  tunnel_interface_bind_loopback_tunnel = "12"
  tunnel_interface_allow_all = false
  tunnel_interface_allow_bgp = false
  tunnel_interface_allow_dhcp = true
  tunnel_interface_allow_dns = true
  tunnel_interface_allow_icmp = true
  tunnel_interface_allow_ssh = false
  tunnel_interface_allow_ntp = false
  tunnel_interface_allow_netconf = false
  tunnel_interface_allow_ospf = false
  tunnel_interface_allow_stun = false
  tunnel_interface_allow_snmp = false
  tunnel_interface_allow_https = true
  nat = true
  nat_refresh_mode = "outbound"
  nat_udp_timeout = 1
  nat_tcp_timeout = 60
  nat_block_icmp_error = true
  nat_response_to_ping = false
  nat_port_forwards = [{
    port_start_range = 0
    port_end_range = 65530
    protocol = "tcp"
    private_vpn = 65530
    private_ip_address = "1.2.3.4"
  }]
  qos_adaptive_period = 15
  qos_adaptive_bandwidth_downstream = 10000
  qos_adaptive_min_downstream = 100
  qos_adaptive_max_downstream = 100000
  qos_adaptive_bandwidth_upstream = 10000
  qos_adaptive_min_upstream = 100
  qos_adaptive_max_upstream = 100000
  shaping_rate = 10000000
  qos_map = "test"
  qos_map_vpn = "test"
  bandwidth_upstream = 214748300
  bandwidth_downstream = 214748300
  write_rule = "RULE1"
  ipv4_access_lists = [{
    direction = "in"
    acl_name = "ACL1"
  }]
  policers = [{
    direction = "in"
    policer_name = "example"
  }]
  ip_mtu = 1500
  tcp_mss = 720
  tloc_extension = "tloc"
  tracker = ["tracker1"]
  ip_directed_broadcast = true
}

data "sdwan_vpn_interface_dsl_pppoa_feature_template" "test" {
  id = sdwan_vpn_interface_dsl_pppoa_feature_template.test.id
}
`
