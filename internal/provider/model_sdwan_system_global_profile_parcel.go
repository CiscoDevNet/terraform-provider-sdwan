// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/tidwall/gjson"
	"github.com/tidwall/sjson"
)

type SystemGlobal struct {
	Id                                            types.String `tfsdk:"id"`
	Version                                       types.Int64  `tfsdk:"version"`
	Name                                          types.String `tfsdk:"name"`
	Description                                   types.String `tfsdk:"description"`
	FeatureProfileId                              types.String `tfsdk:"feature_profile_id"`
	ServicesGlobalServicesIpHttpServer            types.Bool   `tfsdk:"services_global_services_ip_http_server"`
	ServicesGlobalServicesIpHttpServerVariable    types.String `tfsdk:"services_global_services_ip_http_server_variable"`
	ServicesGlobalServicesIpHttpsServer           types.Bool   `tfsdk:"services_global_services_ip_https_server"`
	ServicesGlobalServicesIpHttpsServerVariable   types.String `tfsdk:"services_global_services_ip_https_server_variable"`
	ServicesGlobalServicesIpFtpPassive            types.Bool   `tfsdk:"services_global_services_ip_ftp_passive"`
	ServicesGlobalServicesIpFtpPassiveVariable    types.String `tfsdk:"services_global_services_ip_ftp_passive_variable"`
	ServicesGlobalServicesIpDomainLookup          types.Bool   `tfsdk:"services_global_services_ip_domain_lookup"`
	ServicesGlobalServicesIpDomainLookupVariable  types.String `tfsdk:"services_global_services_ip_domain_lookup_variable"`
	ServicesGlobalServicesIpArpProxy              types.Bool   `tfsdk:"services_global_services_ip_arp_proxy"`
	ServicesGlobalServicesIpArpProxyVariable      types.String `tfsdk:"services_global_services_ip_arp_proxy_variable"`
	ServicesGlobalServicesIpRcmd                  types.Bool   `tfsdk:"services_global_services_ip_rcmd"`
	ServicesGlobalServicesIpRcmdVariable          types.String `tfsdk:"services_global_services_ip_rcmd_variable"`
	ServicesGlobalServicesIpLineVty               types.Bool   `tfsdk:"services_global_services_ip_line_vty"`
	ServicesGlobalServicesIpLineVtyVariable       types.String `tfsdk:"services_global_services_ip_line_vty_variable"`
	ServicesGlobalServicesIpCdp                   types.Bool   `tfsdk:"services_global_services_ip_cdp"`
	ServicesGlobalServicesIpCdpVariable           types.String `tfsdk:"services_global_services_ip_cdp_variable"`
	ServicesGlobalServicesIpLldp                  types.Bool   `tfsdk:"services_global_services_ip_lldp"`
	ServicesGlobalServicesIpLldpVariable          types.String `tfsdk:"services_global_services_ip_lldp_variable"`
	ServicesGlobalServicesIpSourceIntrf           types.String `tfsdk:"services_global_services_ip_source_intrf"`
	ServicesGlobalServicesIpSourceIntrfVariable   types.String `tfsdk:"services_global_services_ip_source_intrf_variable"`
	GlobalOtherSettingsTcpKeepalivesIn            types.Bool   `tfsdk:"global_other_settings_tcp_keepalives_in"`
	GlobalOtherSettingsTcpKeepalivesInVariable    types.String `tfsdk:"global_other_settings_tcp_keepalives_in_variable"`
	GlobalOtherSettingsTcpKeepalivesOut           types.Bool   `tfsdk:"global_other_settings_tcp_keepalives_out"`
	GlobalOtherSettingsTcpKeepalivesOutVariable   types.String `tfsdk:"global_other_settings_tcp_keepalives_out_variable"`
	GlobalOtherSettingsTcpSmallServers            types.Bool   `tfsdk:"global_other_settings_tcp_small_servers"`
	GlobalOtherSettingsTcpSmallServersVariable    types.String `tfsdk:"global_other_settings_tcp_small_servers_variable"`
	GlobalOtherSettingsUdpSmallServers            types.Bool   `tfsdk:"global_other_settings_udp_small_servers"`
	GlobalOtherSettingsUdpSmallServersVariable    types.String `tfsdk:"global_other_settings_udp_small_servers_variable"`
	GlobalOtherSettingsConsoleLogging             types.Bool   `tfsdk:"global_other_settings_console_logging"`
	GlobalOtherSettingsConsoleLoggingVariable     types.String `tfsdk:"global_other_settings_console_logging_variable"`
	GlobalOtherSettingsIPSourceRoute              types.Bool   `tfsdk:"global_other_settings_i_p_source_route"`
	GlobalOtherSettingsIPSourceRouteVariable      types.String `tfsdk:"global_other_settings_i_p_source_route_variable"`
	GlobalOtherSettingsVtyLineLogging             types.Bool   `tfsdk:"global_other_settings_vty_line_logging"`
	GlobalOtherSettingsVtyLineLoggingVariable     types.String `tfsdk:"global_other_settings_vty_line_logging_variable"`
	GlobalOtherSettingsSnmpIfindexPersist         types.Bool   `tfsdk:"global_other_settings_snmp_ifindex_persist"`
	GlobalOtherSettingsSnmpIfindexPersistVariable types.String `tfsdk:"global_other_settings_snmp_ifindex_persist_variable"`
	GlobalOtherSettingsIgnoreBootp                types.Bool   `tfsdk:"global_other_settings_ignore_bootp"`
	GlobalOtherSettingsIgnoreBootpVariable        types.String `tfsdk:"global_other_settings_ignore_bootp_variable"`
	GlobalSettingsNat64UdpTimeout                 types.Int64  `tfsdk:"global_settings_nat64_udp_timeout"`
	GlobalSettingsNat64UdpTimeoutVariable         types.String `tfsdk:"global_settings_nat64_udp_timeout_variable"`
	GlobalSettingsNat64TcpTimeout                 types.Int64  `tfsdk:"global_settings_nat64_tcp_timeout"`
	GlobalSettingsNat64TcpTimeoutVariable         types.String `tfsdk:"global_settings_nat64_tcp_timeout_variable"`
	GlobalSettingsHttpAuthentication              types.String `tfsdk:"global_settings_http_authentication"`
	GlobalSettingsHttpAuthenticationVariable      types.String `tfsdk:"global_settings_http_authentication_variable"`
	GlobalSettingsSSHVersion                      types.String `tfsdk:"global_settings_s_s_h_version"`
	GlobalSettingsSSHVersionVariable              types.String `tfsdk:"global_settings_s_s_h_version_variable"`
}

func (data SystemGlobal) getModel() string {
	return "system_global"
}

func (data SystemGlobal) getPath() string {
	return fmt.Sprintf("/v1/feature-profile/sdwan/system/%v/global", data.FeatureProfileId.ValueString())
}

func (data SystemGlobal) toBody(ctx context.Context) string {
	body := ""
	body, _ = sjson.Set(body, "name", data.Name.ValueString())
	body, _ = sjson.Set(body, "description", data.Description.ValueString())
	path := "data."

	if !data.ServicesGlobalServicesIpHttpServerVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpServer.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpServer.value", data.ServicesGlobalServicesIpHttpServerVariable.ValueString())
	} else if data.ServicesGlobalServicesIpHttpServer.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpServer.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpServer.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpServer.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpServer.value", data.ServicesGlobalServicesIpHttpServer.ValueBool())
	}

	if !data.ServicesGlobalServicesIpHttpsServerVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpsServer.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpsServer.value", data.ServicesGlobalServicesIpHttpsServerVariable.ValueString())
	} else if data.ServicesGlobalServicesIpHttpsServer.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpsServer.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpsServer.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpsServer.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpHttpsServer.value", data.ServicesGlobalServicesIpHttpsServer.ValueBool())
	}

	if !data.ServicesGlobalServicesIpFtpPassiveVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpFtpPassive.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpFtpPassive.value", data.ServicesGlobalServicesIpFtpPassiveVariable.ValueString())
	} else if data.ServicesGlobalServicesIpFtpPassive.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpFtpPassive.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpFtpPassive.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpFtpPassive.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpFtpPassive.value", data.ServicesGlobalServicesIpFtpPassive.ValueBool())
	}

	if !data.ServicesGlobalServicesIpDomainLookupVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpDomainLookup.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpDomainLookup.value", data.ServicesGlobalServicesIpDomainLookupVariable.ValueString())
	} else if data.ServicesGlobalServicesIpDomainLookup.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpDomainLookup.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpDomainLookup.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpDomainLookup.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpDomainLookup.value", data.ServicesGlobalServicesIpDomainLookup.ValueBool())
	}

	if !data.ServicesGlobalServicesIpArpProxyVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpArpProxy.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpArpProxy.value", data.ServicesGlobalServicesIpArpProxyVariable.ValueString())
	} else if data.ServicesGlobalServicesIpArpProxy.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpArpProxy.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpArpProxy.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpArpProxy.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpArpProxy.value", data.ServicesGlobalServicesIpArpProxy.ValueBool())
	}

	if !data.ServicesGlobalServicesIpRcmdVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpRcmd.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpRcmd.value", data.ServicesGlobalServicesIpRcmdVariable.ValueString())
	} else if data.ServicesGlobalServicesIpRcmd.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpRcmd.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpRcmd.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpRcmd.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpRcmd.value", data.ServicesGlobalServicesIpRcmd.ValueBool())
	}

	if !data.ServicesGlobalServicesIpLineVtyVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLineVty.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLineVty.value", data.ServicesGlobalServicesIpLineVtyVariable.ValueString())
	} else if data.ServicesGlobalServicesIpLineVty.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLineVty.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLineVty.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLineVty.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLineVty.value", data.ServicesGlobalServicesIpLineVty.ValueBool())
	}

	if !data.ServicesGlobalServicesIpCdpVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpCdp.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpCdp.value", data.ServicesGlobalServicesIpCdpVariable.ValueString())
	} else if data.ServicesGlobalServicesIpCdp.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpCdp.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpCdp.value", true)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpCdp.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpCdp.value", data.ServicesGlobalServicesIpCdp.ValueBool())
	}

	if !data.ServicesGlobalServicesIpLldpVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLldp.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLldp.value", data.ServicesGlobalServicesIpLldpVariable.ValueString())
	} else if data.ServicesGlobalServicesIpLldp.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLldp.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLldp.value", true)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLldp.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpLldp.value", data.ServicesGlobalServicesIpLldp.ValueBool())
	}

	if !data.ServicesGlobalServicesIpSourceIntrfVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpSourceIntrf.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpSourceIntrf.value", data.ServicesGlobalServicesIpSourceIntrfVariable.ValueString())
	} else if data.ServicesGlobalServicesIpSourceIntrf.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpSourceIntrf.optionType", "default")

	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpSourceIntrf.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.servicesGlobalServicesIpSourceIntrf.value", data.ServicesGlobalServicesIpSourceIntrf.ValueString())
	}

	if !data.GlobalOtherSettingsTcpKeepalivesInVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.value", data.GlobalOtherSettingsTcpKeepalivesInVariable.ValueString())
	} else if data.GlobalOtherSettingsTcpKeepalivesIn.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.value", true)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.value", data.GlobalOtherSettingsTcpKeepalivesIn.ValueBool())
	}

	if !data.GlobalOtherSettingsTcpKeepalivesOutVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.value", data.GlobalOtherSettingsTcpKeepalivesOutVariable.ValueString())
	} else if data.GlobalOtherSettingsTcpKeepalivesOut.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.value", true)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.value", data.GlobalOtherSettingsTcpKeepalivesOut.ValueBool())
	}

	if !data.GlobalOtherSettingsTcpSmallServersVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpSmallServers.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpSmallServers.value", data.GlobalOtherSettingsTcpSmallServersVariable.ValueString())
	} else if data.GlobalOtherSettingsTcpSmallServers.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpSmallServers.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpSmallServers.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpSmallServers.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsTcpSmallServers.value", data.GlobalOtherSettingsTcpSmallServers.ValueBool())
	}

	if !data.GlobalOtherSettingsUdpSmallServersVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsUdpSmallServers.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsUdpSmallServers.value", data.GlobalOtherSettingsUdpSmallServersVariable.ValueString())
	} else if data.GlobalOtherSettingsUdpSmallServers.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsUdpSmallServers.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsUdpSmallServers.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsUdpSmallServers.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsUdpSmallServers.value", data.GlobalOtherSettingsUdpSmallServers.ValueBool())
	}

	if !data.GlobalOtherSettingsConsoleLoggingVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsConsoleLogging.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsConsoleLogging.value", data.GlobalOtherSettingsConsoleLoggingVariable.ValueString())
	} else if data.GlobalOtherSettingsConsoleLogging.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsConsoleLogging.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsConsoleLogging.value", true)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsConsoleLogging.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsConsoleLogging.value", data.GlobalOtherSettingsConsoleLogging.ValueBool())
	}

	if !data.GlobalOtherSettingsIPSourceRouteVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIPSourceRoute.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIPSourceRoute.value", data.GlobalOtherSettingsIPSourceRouteVariable.ValueString())
	} else if data.GlobalOtherSettingsIPSourceRoute.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIPSourceRoute.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIPSourceRoute.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIPSourceRoute.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIPSourceRoute.value", data.GlobalOtherSettingsIPSourceRoute.ValueBool())
	}

	if !data.GlobalOtherSettingsVtyLineLoggingVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsVtyLineLogging.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsVtyLineLogging.value", data.GlobalOtherSettingsVtyLineLoggingVariable.ValueString())
	} else if data.GlobalOtherSettingsVtyLineLogging.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsVtyLineLogging.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsVtyLineLogging.value", false)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsVtyLineLogging.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsVtyLineLogging.value", data.GlobalOtherSettingsVtyLineLogging.ValueBool())
	}

	if !data.GlobalOtherSettingsSnmpIfindexPersistVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.value", data.GlobalOtherSettingsSnmpIfindexPersistVariable.ValueString())
	} else if data.GlobalOtherSettingsSnmpIfindexPersist.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.value", true)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.value", data.GlobalOtherSettingsSnmpIfindexPersist.ValueBool())
	}

	if !data.GlobalOtherSettingsIgnoreBootpVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIgnoreBootp.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIgnoreBootp.value", data.GlobalOtherSettingsIgnoreBootpVariable.ValueString())
	} else if data.GlobalOtherSettingsIgnoreBootp.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIgnoreBootp.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIgnoreBootp.value", true)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIgnoreBootp.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalOtherSettingsIgnoreBootp.value", data.GlobalOtherSettingsIgnoreBootp.ValueBool())
	}

	if !data.GlobalSettingsNat64UdpTimeoutVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64UdpTimeout.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64UdpTimeout.value", data.GlobalSettingsNat64UdpTimeoutVariable.ValueString())
	} else if data.GlobalSettingsNat64UdpTimeout.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64UdpTimeout.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64UdpTimeout.value", 300)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64UdpTimeout.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64UdpTimeout.value", data.GlobalSettingsNat64UdpTimeout.ValueInt64())
	}

	if !data.GlobalSettingsNat64TcpTimeoutVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64TcpTimeout.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64TcpTimeout.value", data.GlobalSettingsNat64TcpTimeoutVariable.ValueString())
	} else if data.GlobalSettingsNat64TcpTimeout.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64TcpTimeout.optionType", "default")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64TcpTimeout.value", 3600)
	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64TcpTimeout.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsNat64TcpTimeout.value", data.GlobalSettingsNat64TcpTimeout.ValueInt64())
	}

	if !data.GlobalSettingsHttpAuthenticationVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsHttpAuthentication.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsHttpAuthentication.value", data.GlobalSettingsHttpAuthenticationVariable.ValueString())
	} else if data.GlobalSettingsHttpAuthentication.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsHttpAuthentication.optionType", "default")

	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsHttpAuthentication.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsHttpAuthentication.value", data.GlobalSettingsHttpAuthentication.ValueString())
	}

	if !data.GlobalSettingsSSHVersionVariable.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsSSHVersion.optionType", "variable")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsSSHVersion.value", data.GlobalSettingsSSHVersionVariable.ValueString())
	} else if data.GlobalSettingsSSHVersion.IsNull() {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsSSHVersion.optionType", "default")

	} else {
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsSSHVersion.optionType", "global")
		body, _ = sjson.Set(body, path+"services_global.services_ip.globalSettingsSSHVersion.value", data.GlobalSettingsSSHVersion.ValueString())
	}
	return body
}

func (data *SystemGlobal) fromBody(ctx context.Context, res gjson.Result) {
	data.Name = types.StringValue(res.Get("payload.name").String())
	if value := res.Get("payload.description"); value.Exists() && value.String() != "" {
		data.Description = types.StringValue(value.String())
	} else {
		data.Description = types.StringNull()
	}
	path := "payload.data."
	data.ServicesGlobalServicesIpHttpServer = types.BoolNull()
	data.ServicesGlobalServicesIpHttpServerVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpHttpServer.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpHttpServer.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpHttpServerVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpHttpServer = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpHttpsServer = types.BoolNull()
	data.ServicesGlobalServicesIpHttpsServerVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpHttpsServer.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpHttpsServer.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpHttpsServerVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpHttpsServer = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpFtpPassive = types.BoolNull()
	data.ServicesGlobalServicesIpFtpPassiveVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpFtpPassive.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpFtpPassive.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpFtpPassiveVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpFtpPassive = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpDomainLookup = types.BoolNull()
	data.ServicesGlobalServicesIpDomainLookupVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpDomainLookup.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpDomainLookup.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpDomainLookupVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpDomainLookup = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpArpProxy = types.BoolNull()
	data.ServicesGlobalServicesIpArpProxyVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpArpProxy.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpArpProxy.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpArpProxyVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpArpProxy = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpRcmd = types.BoolNull()
	data.ServicesGlobalServicesIpRcmdVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpRcmd.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpRcmd.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpRcmdVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpRcmd = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpLineVty = types.BoolNull()
	data.ServicesGlobalServicesIpLineVtyVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpLineVty.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpLineVty.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpLineVtyVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpLineVty = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpCdp = types.BoolNull()
	data.ServicesGlobalServicesIpCdpVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpCdp.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpCdp.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpCdpVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpCdp = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpLldp = types.BoolNull()
	data.ServicesGlobalServicesIpLldpVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpLldp.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpLldp.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpLldpVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpLldp = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpSourceIntrf = types.StringNull()
	data.ServicesGlobalServicesIpSourceIntrfVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpSourceIntrf.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpSourceIntrf.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpSourceIntrfVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpSourceIntrf = types.StringValue(va.String())
		}
	}
	data.GlobalOtherSettingsTcpKeepalivesIn = types.BoolNull()
	data.GlobalOtherSettingsTcpKeepalivesInVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsTcpKeepalivesInVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsTcpKeepalivesIn = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsTcpKeepalivesOut = types.BoolNull()
	data.GlobalOtherSettingsTcpKeepalivesOutVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsTcpKeepalivesOutVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsTcpKeepalivesOut = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsTcpSmallServers = types.BoolNull()
	data.GlobalOtherSettingsTcpSmallServersVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpSmallServers.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpSmallServers.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsTcpSmallServersVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsTcpSmallServers = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsUdpSmallServers = types.BoolNull()
	data.GlobalOtherSettingsUdpSmallServersVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsUdpSmallServers.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsUdpSmallServers.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsUdpSmallServersVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsUdpSmallServers = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsConsoleLogging = types.BoolNull()
	data.GlobalOtherSettingsConsoleLoggingVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsConsoleLogging.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsConsoleLogging.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsConsoleLoggingVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsConsoleLogging = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsIPSourceRoute = types.BoolNull()
	data.GlobalOtherSettingsIPSourceRouteVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsIPSourceRoute.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsIPSourceRoute.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsIPSourceRouteVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsIPSourceRoute = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsVtyLineLogging = types.BoolNull()
	data.GlobalOtherSettingsVtyLineLoggingVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsVtyLineLogging.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsVtyLineLogging.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsVtyLineLoggingVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsVtyLineLogging = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsSnmpIfindexPersist = types.BoolNull()
	data.GlobalOtherSettingsSnmpIfindexPersistVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsSnmpIfindexPersistVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsSnmpIfindexPersist = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsIgnoreBootp = types.BoolNull()
	data.GlobalOtherSettingsIgnoreBootpVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsIgnoreBootp.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsIgnoreBootp.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsIgnoreBootpVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsIgnoreBootp = types.BoolValue(va.Bool())
		}
	}
	data.GlobalSettingsNat64UdpTimeout = types.Int64Null()
	data.GlobalSettingsNat64UdpTimeoutVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalSettingsNat64UdpTimeout.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalSettingsNat64UdpTimeout.value")
		if t.String() == "variable" {
			data.GlobalSettingsNat64UdpTimeoutVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalSettingsNat64UdpTimeout = types.Int64Value(va.Int())
		}
	}
	data.GlobalSettingsNat64TcpTimeout = types.Int64Null()
	data.GlobalSettingsNat64TcpTimeoutVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalSettingsNat64TcpTimeout.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalSettingsNat64TcpTimeout.value")
		if t.String() == "variable" {
			data.GlobalSettingsNat64TcpTimeoutVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalSettingsNat64TcpTimeout = types.Int64Value(va.Int())
		}
	}
	data.GlobalSettingsHttpAuthentication = types.StringNull()
	data.GlobalSettingsHttpAuthenticationVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalSettingsHttpAuthentication.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalSettingsHttpAuthentication.value")
		if t.String() == "variable" {
			data.GlobalSettingsHttpAuthenticationVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalSettingsHttpAuthentication = types.StringValue(va.String())
		}
	}
	data.GlobalSettingsSSHVersion = types.StringNull()
	data.GlobalSettingsSSHVersionVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalSettingsSSHVersion.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalSettingsSSHVersion.value")
		if t.String() == "variable" {
			data.GlobalSettingsSSHVersionVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalSettingsSSHVersion = types.StringValue(va.String())
		}
	}
}

func (data *SystemGlobal) updateFromBody(ctx context.Context, res gjson.Result) {
	data.Name = types.StringValue(res.Get("payload.name").String())
	if value := res.Get("payload.description"); value.Exists() && value.String() != "" {
		data.Description = types.StringValue(value.String())
	} else {
		data.Description = types.StringNull()
	}
	path := "payload.data."
	data.ServicesGlobalServicesIpHttpServer = types.BoolNull()
	data.ServicesGlobalServicesIpHttpServerVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpHttpServer.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpHttpServer.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpHttpServerVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpHttpServer = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpHttpsServer = types.BoolNull()
	data.ServicesGlobalServicesIpHttpsServerVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpHttpsServer.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpHttpsServer.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpHttpsServerVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpHttpsServer = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpFtpPassive = types.BoolNull()
	data.ServicesGlobalServicesIpFtpPassiveVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpFtpPassive.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpFtpPassive.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpFtpPassiveVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpFtpPassive = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpDomainLookup = types.BoolNull()
	data.ServicesGlobalServicesIpDomainLookupVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpDomainLookup.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpDomainLookup.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpDomainLookupVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpDomainLookup = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpArpProxy = types.BoolNull()
	data.ServicesGlobalServicesIpArpProxyVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpArpProxy.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpArpProxy.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpArpProxyVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpArpProxy = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpRcmd = types.BoolNull()
	data.ServicesGlobalServicesIpRcmdVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpRcmd.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpRcmd.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpRcmdVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpRcmd = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpLineVty = types.BoolNull()
	data.ServicesGlobalServicesIpLineVtyVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpLineVty.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpLineVty.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpLineVtyVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpLineVty = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpCdp = types.BoolNull()
	data.ServicesGlobalServicesIpCdpVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpCdp.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpCdp.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpCdpVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpCdp = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpLldp = types.BoolNull()
	data.ServicesGlobalServicesIpLldpVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpLldp.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpLldp.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpLldpVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpLldp = types.BoolValue(va.Bool())
		}
	}
	data.ServicesGlobalServicesIpSourceIntrf = types.StringNull()
	data.ServicesGlobalServicesIpSourceIntrfVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpSourceIntrf.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.servicesGlobalServicesIpSourceIntrf.value")
		if t.String() == "variable" {
			data.ServicesGlobalServicesIpSourceIntrfVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.ServicesGlobalServicesIpSourceIntrf = types.StringValue(va.String())
		}
	}
	data.GlobalOtherSettingsTcpKeepalivesIn = types.BoolNull()
	data.GlobalOtherSettingsTcpKeepalivesInVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpKeepalivesIn.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsTcpKeepalivesInVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsTcpKeepalivesIn = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsTcpKeepalivesOut = types.BoolNull()
	data.GlobalOtherSettingsTcpKeepalivesOutVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpKeepalivesOut.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsTcpKeepalivesOutVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsTcpKeepalivesOut = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsTcpSmallServers = types.BoolNull()
	data.GlobalOtherSettingsTcpSmallServersVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpSmallServers.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsTcpSmallServers.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsTcpSmallServersVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsTcpSmallServers = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsUdpSmallServers = types.BoolNull()
	data.GlobalOtherSettingsUdpSmallServersVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsUdpSmallServers.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsUdpSmallServers.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsUdpSmallServersVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsUdpSmallServers = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsConsoleLogging = types.BoolNull()
	data.GlobalOtherSettingsConsoleLoggingVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsConsoleLogging.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsConsoleLogging.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsConsoleLoggingVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsConsoleLogging = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsIPSourceRoute = types.BoolNull()
	data.GlobalOtherSettingsIPSourceRouteVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsIPSourceRoute.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsIPSourceRoute.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsIPSourceRouteVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsIPSourceRoute = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsVtyLineLogging = types.BoolNull()
	data.GlobalOtherSettingsVtyLineLoggingVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsVtyLineLogging.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsVtyLineLogging.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsVtyLineLoggingVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsVtyLineLogging = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsSnmpIfindexPersist = types.BoolNull()
	data.GlobalOtherSettingsSnmpIfindexPersistVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsSnmpIfindexPersist.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsSnmpIfindexPersistVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsSnmpIfindexPersist = types.BoolValue(va.Bool())
		}
	}
	data.GlobalOtherSettingsIgnoreBootp = types.BoolNull()
	data.GlobalOtherSettingsIgnoreBootpVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalOtherSettingsIgnoreBootp.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalOtherSettingsIgnoreBootp.value")
		if t.String() == "variable" {
			data.GlobalOtherSettingsIgnoreBootpVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalOtherSettingsIgnoreBootp = types.BoolValue(va.Bool())
		}
	}
	data.GlobalSettingsNat64UdpTimeout = types.Int64Null()
	data.GlobalSettingsNat64UdpTimeoutVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalSettingsNat64UdpTimeout.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalSettingsNat64UdpTimeout.value")
		if t.String() == "variable" {
			data.GlobalSettingsNat64UdpTimeoutVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalSettingsNat64UdpTimeout = types.Int64Value(va.Int())
		}
	}
	data.GlobalSettingsNat64TcpTimeout = types.Int64Null()
	data.GlobalSettingsNat64TcpTimeoutVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalSettingsNat64TcpTimeout.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalSettingsNat64TcpTimeout.value")
		if t.String() == "variable" {
			data.GlobalSettingsNat64TcpTimeoutVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalSettingsNat64TcpTimeout = types.Int64Value(va.Int())
		}
	}
	data.GlobalSettingsHttpAuthentication = types.StringNull()
	data.GlobalSettingsHttpAuthenticationVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalSettingsHttpAuthentication.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalSettingsHttpAuthentication.value")
		if t.String() == "variable" {
			data.GlobalSettingsHttpAuthenticationVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalSettingsHttpAuthentication = types.StringValue(va.String())
		}
	}
	data.GlobalSettingsSSHVersion = types.StringNull()
	data.GlobalSettingsSSHVersionVariable = types.StringNull()
	if t := res.Get(path + "services_global.services_ip.globalSettingsSSHVersion.optionType"); t.Exists() {
		va := res.Get(path + "services_global.services_ip.globalSettingsSSHVersion.value")
		if t.String() == "variable" {
			data.GlobalSettingsSSHVersionVariable = types.StringValue(va.String())
		} else if t.String() == "global" {
			data.GlobalSettingsSSHVersion = types.StringValue(va.String())
		}
	}
}
