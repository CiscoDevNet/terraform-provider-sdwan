// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceSdwanACLPolicyDefinition(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceSdwanACLPolicyDefinitionConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "name", "Example"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "description", "My description"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "default_action", "drop"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.id", "10"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.ip_type", "ipv4"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.name", "Sequence 10"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.base_action", "accept"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.match_entries.0.type", "dscp"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.match_entries.0.dscp", "16"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.action_entries.0.type", "set"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.action_entries.0.set_parameters.0.type", "dscp"),
					resource.TestCheckResourceAttr("data.sdwan_acl_policy_definition.test", "sequences.0.action_entries.0.set_parameters.0.dscp", "16"),
				),
			},
		},
	})
}

const testAccDataSourceSdwanACLPolicyDefinitionConfig = `

resource "sdwan_acl_policy_definition" "test" {
  name = "Example"
  description = "My description"
  default_action = "drop"
  sequences = [{
    id = 10
    ip_type = "ipv4"
    name = "Sequence 10"
    base_action = "accept"
	match_entries = [{
		type = "dscp"
		dscp = 16
	}]
	action_entries = [{
		type = "set"
		set_parameters = [{
			type = "dscp"
			dscp = 16
		}]
	}]
  }]
}

data "sdwan_acl_policy_definition" "test" {
  id = sdwan_acl_policy_definition.test.id
}
`
