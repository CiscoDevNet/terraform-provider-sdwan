// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccSdwanVPNInterfaceSVIFeatureTemplate(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccSdwanVPNInterfaceSVIFeatureTemplateConfig_minimum(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "if_name", "Vlan100"),
				),
			},
			{
				Config: testAccSdwanVPNInterfaceSVIFeatureTemplateConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "if_name", "Vlan100"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "interface_description", "VPN Interface SVI"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_address", "2.3.4.5"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_secondary_addresses.0.ipv4_address", "4.5.6.7"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_address", "2001:db8:85a3::8a2e:370:7334"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_dhcp_client", "false"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_dhcp_distance", "101"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_dhcp_rapid_commit", "false"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_secondary_addresses.0.ipv6_address", "2001:db8:85a3::8a2e:370:7334"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_dhcp_helpers.0.address", "2001:db8:85a3::8a2e:370:7334"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_dhcp_helpers.0.vpn_id", "100"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ip_directed_broadcast", "true"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "mtu", "1500"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ip_mtu", "1500"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "tcp_mss_adjust", "1400"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "shutdown", "false"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "arp_timeout", "100"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_access_lists.0.direction", "in"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_access_lists.0.acl_name", "ACL1"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_access_lists.0.direction", "in"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_access_lists.0.acl_name", "ACL2"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "policers.0.direction", "in"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "policers.0.policer_name", "POLICER1"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "static_arp_entries.0.ipv4_address", "3.4.4.5"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "static_arp_entries.0.mac_address", "00:00:00:00:00:00"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.group_id", "1"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.priority", "100"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.timer", "1000"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.track_omp", "true"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.track_prefix_list", "TRACK1"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.ipv4_address", "5.6.7.8"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.ipv4_secondary_addresses.0.ipv4_address", "8.8.8.8"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.tloc_preference_change", "true"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.tloc_preference_change_value", "100"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.tracking_objects.0.name", "100"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.tracking_objects.0.track_action", "decrement"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv4_vrrps.0.tracking_objects.0.decrement_value", "10"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_vrrps.0.group_id", "1"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_vrrps.0.priority", "100"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_vrrps.0.timer", "1000"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_vrrps.0.track_omp", "true"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_vrrps.0.track_prefix_list", "TRACK1"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_vrrps.0.ipv6_addresses.0.link_local_address", "FE80::1/64"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_vrrps.0.ipv6_addresses.0.prefix", "2001:db8:85a3::8a2e:370:7335"),
					resource.TestCheckResourceAttr("sdwan_vpn_interface_svi_feature_template.test", "ipv6_vrrps.0.ipv6_secondary_addresses.0.prefix", "2001:db8:85a3::8a2e:370:7336"),
				),
			},
		},
	})
}

func testAccSdwanVPNInterfaceSVIFeatureTemplateConfig_minimum() string {
	return `
	resource "sdwan_vpn_interface_svi_feature_template" "test" {
		name = "TF_TEST_MIN"
		description = "Terraform integration test"
		device_types = ["vedge-C8000V"]
		if_name = "Vlan100"
	}
	`
}

func testAccSdwanVPNInterfaceSVIFeatureTemplateConfig_all() string {
	return `
	resource "sdwan_vpn_interface_svi_feature_template" "test" {
		name = "TF_TEST_ALL"
		description = "Terraform integration test"
		device_types = ["vedge-C8000V"]
		if_name = "Vlan100"
		interface_description = "VPN Interface SVI"
		ipv4_address = "2.3.4.5"
		ipv4_secondary_addresses = [{
			ipv4_address = "4.5.6.7"
		}]
		ipv6_address = "2001:db8:85a3::8a2e:370:7334"
		ipv6_dhcp_client = false
		ipv6_dhcp_distance = 101
		ipv6_dhcp_rapid_commit = false
		ipv6_secondary_addresses = [{
			ipv6_address = "2001:db8:85a3::8a2e:370:7334"
		}]
		ipv4_dhcp_helper = ["7.7.7.7"]
		ipv6_dhcp_helpers = [{
			address = "2001:db8:85a3::8a2e:370:7334"
			vpn_id = 100
		}]
		ip_directed_broadcast = true
		mtu = 1500
		ip_mtu = 1500
		tcp_mss_adjust = 1400
		shutdown = false
		arp_timeout = 100
		ipv4_access_lists = [{
			direction = "in"
			acl_name = "ACL1"
		}]
		ipv6_access_lists = [{
			direction = "in"
			acl_name = "ACL2"
		}]
		policers = [{
			direction = "in"
			policer_name = "POLICER1"
		}]
		static_arp_entries = [{
			ipv4_address = "3.4.4.5"
			mac_address = "00:00:00:00:00:00"
		}]
		ipv4_vrrps = [{
			group_id = 1
			priority = 100
			timer = 1000
			track_omp = true
			track_prefix_list = "TRACK1"
			ipv4_address = "5.6.7.8"
			ipv4_secondary_addresses = [{
				ipv4_address = "8.8.8.8"
			}]
			tloc_preference_change = true
			tloc_preference_change_value = 100
			tracking_objects = [{
				name = 100
				track_action = "decrement"
				decrement_value = 10
			}]
		}]
		ipv6_vrrps = [{
			group_id = 1
			priority = 100
			timer = 1000
			track_omp = true
			track_prefix_list = "TRACK1"
			ipv6_addresses = [{
				link_local_address = "FE80::1/64"
				prefix = "2001:db8:85a3::8a2e:370:7335"
			}]
			ipv6_secondary_addresses = [{
				prefix = "2001:db8:85a3::8a2e:370:7336"
			}]
		}]
	}
	`
}
