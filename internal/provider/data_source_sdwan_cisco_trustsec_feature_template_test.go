// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceSdwanCiscoTrustSecFeatureTemplate(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceSdwanCiscoTrustSecFeatureTemplateConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "device_sgt", "100"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "credentials_id", "user1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "credentials_password", "MyPassword"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "enable_enforcement", "true"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "enable_sxp", "true"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_source_ip", "1.2.3.4"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_default_password", "MyPassword"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_key_chain", "keychain1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_log_binding_changes", "false"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_reconciliation_period", "120"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_retry_period", "120"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "speaker_hold_time", "120"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "minimum_listener_hold_time", "90"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "maximum_listener_hold_time", "180"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_node_id_type", "interface-name"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_node_id", "VirtualPortGroup"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_connections.0.peer_ip", "1.2.3.4"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_connections.0.source_ip", "2.3.4.5"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_connections.0.preshared_key", "default"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_connections.0.mode", "local"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_connections.0.mode_type", "listener"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_connections.0.minimum_hold_time", "100"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_connections.0.maximum_hold_time", "200"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_trustsec_feature_template.test", "sxp_connections.0.vpn_id", "0"),
				),
			},
		},
	})
}

const testAccDataSourceSdwanCiscoTrustSecFeatureTemplateConfig = `

resource "sdwan_cisco_trustsec_feature_template" "test" {
  name = "TF_TEST_MIN"
  description = "Terraform integration test"
  device_types = ["vedge-C8000V"]
  device_sgt = 100
  credentials_id = "user1"
  credentials_password = "MyPassword"
  enable_enforcement = true
  enable_sxp = true
  sxp_source_ip = "1.2.3.4"
  sxp_default_password = "MyPassword"
  sxp_key_chain = "keychain1"
  sxp_log_binding_changes = false
  sxp_reconciliation_period = 120
  sxp_retry_period = 120
  speaker_hold_time = 120
  minimum_listener_hold_time = 90
  maximum_listener_hold_time = 180
  sxp_node_id_type = "interface-name"
  sxp_node_id = "VirtualPortGroup"
  sxp_connections = [{
    peer_ip = "1.2.3.4"
    source_ip = "2.3.4.5"
    preshared_key = "default"
    mode = "local"
    mode_type = "listener"
    minimum_hold_time = 100
    maximum_hold_time = 200
    vpn_id = 0
  }]
}

data "sdwan_cisco_trustsec_feature_template" "test" {
  id = sdwan_cisco_trustsec_feature_template.test.id
}
`
