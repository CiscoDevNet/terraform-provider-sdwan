// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccSdwanLocalizedPolicy(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccSdwanLocalizedPolicyConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "name", "Example"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "description", "My description"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "flow_visibility_ipv4", "true"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "flow_visibility_ipv6", "true"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "application_visibility_ipv4", "true"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "application_visibility_ipv6", "true"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "cloud_qos", "true"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "cloud_qos_service_side", "true"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "implicit_acl_logging", "true"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "log_frequency", "1000"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "ipv4_visibility_cache_entries", "1000"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "ipv6_visibility_cache_entries", "1000"),
					resource.TestCheckResourceAttr("sdwan_localized_policy.test", "definitions.0.type", "acl"),
				),
			},
		},
	})
}

const testAccSdwanLocalizedPolicyConfig = `
resource "sdwan_acl_policy_definition" "test" {
  name           = "TF_TEST"
  description    = "Terraform test"
  default_action = "drop"
  sequences = [
    {
      id          = 10
      ip_type     = "ipv4"
      name        = "Sequence 10"
      base_action = "accept"
      match_entries = [
        {
          type = "dscp"
          dscp = 16
        }
      ]
      action_entries = [
        {
          type = "set"
          set_parameters = [
            {
              type = "dscp"
              dscp = 16
            }
          ]
        }
      ]
    }
  ]
}


resource "sdwan_localized_policy" "test" {
	name = "Example"
	description = "My description"
	flow_visibility_ipv4 = true
	flow_visibility_ipv6 = true
	application_visibility_ipv4 = true
	application_visibility_ipv6 = true
	cloud_qos = true
	cloud_qos_service_side = true
	implicit_acl_logging = true
	log_frequency = 1000
	ipv4_visibility_cache_entries = 1000
	ipv6_visibility_cache_entries = 1000
	definitions = [{
		id = sdwan_acl_policy_definition.test.id
		type = "acl"
	}]
}
`
