// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccSdwanSystemGlobalProfileParcel(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccSdwanSystemGlobalProfileParcelConfig_minimum(),
				Check:  resource.ComposeTestCheckFunc(),
			},
			{
				Config: testAccSdwanSystemGlobalProfileParcelConfig_all(),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_http_server", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_https_server", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_ftp_passive", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_domain_lookup", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_arp_proxy", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_rcmd", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_line_vty", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_cdp", "true"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_lldp", "true"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "services_global_services_ip_source_intrf", "GigabitEthernet0/0/1"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_tcp_keepalives_in", "true"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_tcp_keepalives_out", "true"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_tcp_small_servers", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_udp_small_servers", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_console_logging", "true"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_i_p_source_route", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_vty_line_logging", "false"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_snmp_ifindex_persist", "true"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_other_settings_ignore_bootp", "true"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_settings_nat64_udp_timeout", "300"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_settings_nat64_tcp_timeout", "3600"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_settings_http_authentication", "aaa"),
					resource.TestCheckResourceAttr("sdwan_system_global_profile_parcel.test", "global_settings_s_s_h_version", "2"),
				),
			},
		},
	})
}

func testAccSdwanSystemGlobalProfileParcelConfig_minimum() string {
	return `
	resource "sdwan_system_feature_profile" "test" {
  name = "TF_TEST"
  description = "Terraform test"
}

	resource "sdwan_system_global_profile_parcel" "test" {
		name = "TF_TEST_MIN"
		description = "Terraform integration test"
		feature_profile_id = sdwan_system_feature_profile.test.id
	}
	`
}

func testAccSdwanSystemGlobalProfileParcelConfig_all() string {
	return `
	resource "sdwan_system_feature_profile" "test" {
  name = "TF_TEST"
  description = "Terraform test"
}

	resource "sdwan_system_global_profile_parcel" "test" {
		name = "TF_TEST_ALL"
		description = "Terraform integration test"
		feature_profile_id = sdwan_system_feature_profile.test.id
		services_global_services_ip_http_server = false
		services_global_services_ip_https_server = false
		services_global_services_ip_ftp_passive = false
		services_global_services_ip_domain_lookup = false
		services_global_services_ip_arp_proxy = false
		services_global_services_ip_rcmd = false
		services_global_services_ip_line_vty = false
		services_global_services_ip_cdp = true
		services_global_services_ip_lldp = true
		services_global_services_ip_source_intrf = "GigabitEthernet0/0/1"
		global_other_settings_tcp_keepalives_in = true
		global_other_settings_tcp_keepalives_out = true
		global_other_settings_tcp_small_servers = false
		global_other_settings_udp_small_servers = false
		global_other_settings_console_logging = true
		global_other_settings_i_p_source_route = false
		global_other_settings_vty_line_logging = false
		global_other_settings_snmp_ifindex_persist = true
		global_other_settings_ignore_bootp = true
		global_settings_nat64_udp_timeout = 300
		global_settings_nat64_tcp_timeout = 3600
		global_settings_http_authentication = "aaa"
		global_settings_s_s_h_version = "2"
	}
	`
}
