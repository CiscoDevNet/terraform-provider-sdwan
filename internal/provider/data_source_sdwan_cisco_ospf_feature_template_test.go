// Copyright Â© 2023 Cisco Systems, Inc. and its affiliates.
// All rights reserved.
//
// Licensed under the Mozilla Public License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://mozilla.org/MPL/2.0/
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: MPL-2.0

// Code generated by "gen/generator.go"; DO NOT EDIT.

package provider

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccDataSourceSdwanCiscoOSPFFeatureTemplate(t *testing.T) {
	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV6ProviderFactories: testAccProtoV6ProviderFactories,
		Steps: []resource.TestStep{
			{
				Config: testAccDataSourceSdwanCiscoOSPFFeatureTemplateConfig,
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "router_id", "1.2.3.4"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "auto_cost_reference_bandwidth", "100000"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "compatible_rfc1583", "true"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "default_information_originate", "true"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "default_information_originate_always", "true"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "default_information_originate_metric", "100"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "default_information_originate_metric_type", "type1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "distance_external", "111"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "distance_inter_area", "111"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "distance_intra_area", "112"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "timers_spf_delay", "300"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "timers_spf_initial_hold", "2000"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "timers_spf_max_hold", "20000"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "redistribute.0.protocol", "static"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "redistribute.0.route_policy", "RP1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "redistribute.0.nat_dia", "true"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "max_metric_router_lsa.0.ad_type", "on-startup"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "max_metric_router_lsa.0.time", "100"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "route_policies.0.direction", "in"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "route_policies.0.policy_name", "POLICY1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.area_number", "1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.stub_no_summary", "false"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.nssa_no_summary", "true"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.name", "e1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.hello_interval", "20"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.dead_interval", "60"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.retransmit_interval", "10"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.cost", "100"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.priority", "10"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.network", "point-to-point"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.passive_interface", "true"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.authentication_type", "message-digest"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.authentication_message_digest_key_id", "1"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.interfaces.0.authentication_message_digest_key", "cisco123"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.ranges.0.address", "1.1.1.0/24"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.ranges.0.cost", "100"),
					resource.TestCheckResourceAttr("data.sdwan_cisco_ospf_feature_template.test", "areas.0.ranges.0.no_advertise", "true"),
				),
			},
		},
	})
}

const testAccDataSourceSdwanCiscoOSPFFeatureTemplateConfig = `

resource "sdwan_cisco_ospf_feature_template" "test" {
  name = "TF_TEST_MIN"
  description = "Terraform integration test"
  device_types = ["vedge-C8000V"]
  router_id = "1.2.3.4"
  auto_cost_reference_bandwidth = 100000
  compatible_rfc1583 = true
  default_information_originate = true
  default_information_originate_always = true
  default_information_originate_metric = 100
  default_information_originate_metric_type = "type1"
  distance_external = 111
  distance_inter_area = 111
  distance_intra_area = 112
  timers_spf_delay = 300
  timers_spf_initial_hold = 2000
  timers_spf_max_hold = 20000
  redistribute = [{
    protocol = "static"
    route_policy = "RP1"
    nat_dia = true
  }]
  max_metric_router_lsa = [{
    ad_type = "on-startup"
    time = 100
  }]
  route_policies = [{
    direction = "in"
    policy_name = "POLICY1"
  }]
  areas = [{
    area_number = 1
    stub_no_summary = false
    nssa_no_summary = true
	interfaces = [{
		name = "e1"
		hello_interval = 20
		dead_interval = 60
		retransmit_interval = 10
		cost = 100
		priority = 10
		network = "point-to-point"
		passive_interface = true
		authentication_type = "message-digest"
		authentication_message_digest_key_id = 1
		authentication_message_digest_key = "cisco123"
	}]
	ranges = [{
		address = "1.1.1.0/24"
		cost = 100
		no_advertise = true
	}]
  }]
}

data "sdwan_cisco_ospf_feature_template" "test" {
  id = sdwan_cisco_ospf_feature_template.test.id
}
`
