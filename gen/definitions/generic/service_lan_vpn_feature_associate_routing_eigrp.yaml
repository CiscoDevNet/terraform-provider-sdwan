---
name: Service LAN VPN Feature Associate Routing EIGRP Feature
rest_endpoint: /v1/feature-profile/sdwan/service/%v/lan/vpn/%s/routing/eigrp/
minimum_version: 20.12.0
id_attribute: parcelId
doc_category: Service Features
test_tags: [SDWAN_2012]
attributes:
  - tf_name: feature_profile_id
    reference: true
    type: String
    mandatory: true
    description: Feature Profile ID
    example: f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac
    test_value: sdwan_service_feature_profile.test.id
  - tf_name: service_lan_vpn_feature_id
    reference: true
    type: String
    mandatory: true
    description: Service LAN VPN Feature ID
    example: 140331f6-5418-4755-a059-13c77eb96037
    test_value: sdwan_service_lan_vpn_feature.test.id
  - model_name: parcelId
    tf_name: service_routing_eigrp_feature_id
    type: String
    mandatory: true
    description: Service Routing EIGRP Feature ID
    example: 140331f6-5418-4755-a059-13c77eb96037
    test_value: sdwan_service_routing_eigrp_feature.test.id

test_prerequisites: |
  resource "sdwan_service_feature_profile" "test" {
    name        = "TF_TEST"
    description = "Terraform test"
  }

  resource "sdwan_service_lan_vpn_feature" "test" {
    name                       = "TF_TEST_SERVICE_LAN"
    description                = "TF_TEST"
    feature_profile_id         = sdwan_service_feature_profile.test.id
    vpn                        = 1
    config_description         = "VPN1"
    omp_admin_distance_ipv4    = 1
    omp_admin_distance_ipv6    = 1
    enable_sdwan_remote_access = false
    primary_dns_address_ipv4   = "1.2.3.4"
    secondary_dns_address_ipv4 = "2.3.4.5"
    primary_dns_address_ipv6   = "2001:0:0:1::0"
    secondary_dns_address_ipv6 = "2001:0:0:2::0"
    host_mappings = [
      {
        host_name   = "HOSTMAPPING1"
        list_of_ips = ["1.2.3.4"]
      }
    ]
    ipv4_static_routes = [
      {
        network_address = "1.2.3.4"
        subnet_mask     = "0.0.0.0"
        next_hops = [
          {
            address                 = "1.2.3.4"
            administrative_distance = 1
          }
        ]
      }
    ]
    ipv6_static_routes = [
      {
        prefix = "2001:0:0:1::0/12"
        next_hops = [
          {
            address                 = "2001:0:0:1::0"
            administrative_distance = 1
          }
        ]
      }
    ]
    services = [
      {
        service_type   = "FW"
        ipv4_addresses = ["1.2.3.4"]
        tracking       = true
      }
    ]
    service_routes = [
      {
        network_address = "1.2.3.4"
        subnet_mask     = "0.0.0.0"
        service         = "SIG"
        vpn             = 0
      }
    ]
    gre_routes = [
      {
        network_address = "1.2.3.4"
        subnet_mask     = "0.0.0.0"
        interface       = ["gre01"]
        vpn             = 0
      }
    ]
    ipsec_routes = [
      {
        network_address = "1.2.3.4"
        subnet_mask     = "0.0.0.0"
        interface       = ["ipsec01"]
      }
    ]
    nat_pools = [
      {
        nat_pool_name = 1
        prefix_length = 3
        range_start   = "1.2.3.4"
        range_end     = "2.3.4.5"
        overload      = true
        direction     = "inside"
      }
    ]
    nat_port_forwards = [
      {
        nat_pool_name        = 2
        source_port          = 122
        translate_port       = 330
        source_ip            = "1.2.3.4"
        translated_source_ip = "2.3.4.5"
        protocol             = "TCP"
      }
    ]
    static_nats = [
      {
        nat_pool_name        = 3
        source_ip            = "1.2.3.4"
        translated_source_ip = "2.3.4.5"
        static_nat_direction = "inside"
      }
    ]
    nat_64_v4_pools = [
      {
        name        = "NATPOOL1"
        range_start = "1.2.3.4"
        range_end   = "2.3.4.5"
        overload    = false
      }
    ]
    ipv4_import_route_targets = [
      {
        route_target = "1.1.1.3:200"
      }
    ]
    ipv4_export_route_targets = [
      {
        route_target = "1.1.1.3:200"
      }
    ]
    ipv6_import_route_targets = [
      {
        route_target = "1.1.1.3:200"
      }
    ]
    ipv6_export_route_targets = [
      {
        route_target = "1.1.1.3:200"
      }
    ]
  }

  resource "sdwan_service_routing_eigrp_feature" "test" {
    name                     = "TF_TEST_ROUTING_EIGRP"
    description              = "Terraform test"
    feature_profile_id         = sdwan_service_feature_profile.test.id
    autonomous_system_id = 111
    networks = [
      {
        ip_address = "100.2.2.3"
        mask       = "255.255.255.0"
      }
    ]
    hello_interval      = 5
    hold_time           = 15
    authentication_type = "md5"
    md5_keys = [
      {
        key_id     = 2
        key_string = "password123"
      }
    ]
    interfaces = [
      {
        name     = "GigabitEthernet3"
        shutdown = false
        summary_addresses = [
          {
            address = "10.0.0.1"
            mask    = "255.255.255.0"
          }
        ]
      }
    ]
    filter = false
  }