---
name: Service LAN VPN Interface Ethernet Feature Associate Tracker Group Feature
rest_endpoint: /v1/feature-profile/sdwan/service/%v/lan/vpn/%s/interface/ethernet/%s/trackergroup/
minimum_version: 20.12.0
id_attribute: parcelId
doc_category: Features - Service
test_tags: [SDWAN_2012]
attributes:
  - tf_name: feature_profile_id
    reference: true
    type: String
    mandatory: true
    description: Feature Profile ID
    example: f6dd22c8-0b4f-496c-9a0b-6813d1f8b8ac
    test_value: sdwan_service_feature_profile.test.id
  - tf_name: service_lan_vpn_feature_id
    reference: true
    type: String
    mandatory: true
    description: Service LAN VPN Feature ID
    example: 140331f6-5418-4755-a059-13c77eb96037
    test_value: sdwan_service_lan_vpn_feature.test.id
  - tf_name: service_lan_vpn_interface_ethernet_feature_id
    reference: true
    type: String
    mandatory: true
    description: Service LAN VPN Interface Ethernet Feature ID
    example: 140331f6-5418-4755-a059-13c77eb96037
    test_value: sdwan_service_lan_vpn_interface_ethernet_feature.test.id
  - model_name: parcelId
    tf_name: service_tracker_group_feature_id
    type: String
    mandatory: true
    description: Service Tracker Group Feature ID
    example: 140331f6-5418-4755-a059-13c77eb96037
    test_value: sdwan_service_tracker_group_feature.test.id

test_prerequisites: |
  resource "sdwan_service_feature_profile" "test" {
    name        = "TF_TEST"
    description = "Terraform test"
  }

  resource "sdwan_service_lan_vpn_feature" "test" {
    name                       = "TF_TEST_SERVICE_LAN"
    description                = "Terraform test"
    feature_profile_id         = sdwan_service_feature_profile.test.id
    vpn                        = 1
    config_description         = "VPN1"
    omp_admin_distance_ipv4    = 1
    omp_admin_distance_ipv6    = 1
    enable_sdwan_remote_access = false
    primary_dns_address_ipv4   = "1.2.3.4"
    secondary_dns_address_ipv4 = "2.3.4.5"
    primary_dns_address_ipv6   = "2001:0:0:1::0"
    secondary_dns_address_ipv6 = "2001:0:0:2::0"
    host_mappings = [
      {
        host_name   = "HOSTMAPPING1"
        list_of_ips = ["1.2.3.4"]
      }
    ]
    ipv4_static_routes = [
      {
        network_address = "1.2.3.4"
        subnet_mask     = "0.0.0.0"
        next_hops = [
          {
            address                 = "1.2.3.4"
            administrative_distance = 1
          }
        ]
      }
    ]
    ipv6_static_routes = [
      {
        prefix = "2001:0:0:1::0/12"
        next_hops = [
          {
            address                 = "2001:0:0:1::0"
            administrative_distance = 1
          }
        ]
      }
    ]
    services = [
      {
        service_type   = "FW"
        ipv4_addresses = ["1.2.3.4"]
        tracking       = true
      }
    ]
    service_routes = [
      {
        network_address = "1.2.3.4"
        subnet_mask     = "0.0.0.0"
        service         = "SIG"
        vpn             = 0
      }
    ]
    gre_routes = [
      {
        network_address = "1.2.3.4"
        subnet_mask     = "0.0.0.0"
        interface       = ["gre01"]
        vpn             = 0
      }
    ]
    ipsec_routes = [
      {
        network_address = "1.2.3.4"
        subnet_mask     = "0.0.0.0"
        interface       = ["ipsec01"]
      }
    ]
    nat_pools = [
      {
        nat_pool_name = 1
        prefix_length = 3
        range_start   = "1.2.3.4"
        range_end     = "2.3.4.5"
        overload      = true
        direction     = "inside"
      }
    ]
    nat_port_forwards = [
      {
        nat_pool_name        = 2
        source_port          = 122
        translate_port       = 330
        source_ip            = "1.2.3.4"
        translated_source_ip = "2.3.4.5"
        protocol             = "TCP"
      }
    ]
    static_nats = [
      {
        nat_pool_name        = 3
        source_ip            = "1.2.3.4"
        translated_source_ip = "2.3.4.5"
        static_nat_direction = "inside"
      }
    ]
    nat_64_v4_pools = [
      {
        name        = "NATPOOL1"
        range_start = "1.2.3.4"
        range_end   = "2.3.4.5"
        overload    = false
      }
    ]
    ipv4_import_route_targets = [
      {
        route_target = "1.1.1.3:200"
      }
    ]
    ipv4_export_route_targets = [
      {
        route_target = "1.1.1.3:200"
      }
    ]
    ipv6_import_route_targets = [
      {
        route_target = "1.1.1.3:200"
      }
    ]
    ipv6_export_route_targets = [
      {
        route_target = "1.1.1.3:200"
      }
    ]
  }

  resource "sdwan_service_lan_vpn_interface_ethernet_feature" "test" {
    name                       = "TF_TEST_SERVICE_LAN_INTERFACE_ETHERNET"
    description                = "Terraform test"
    feature_profile_id         = sdwan_service_feature_profile.test.id
    service_lan_vpn_feature_id = sdwan_service_lan_vpn_feature.test.id
    shutdown                   = false
    interface_name             = "GigabitEthernet3"
    interface_description      = "LAN"
    ipv4_address               = "1.2.3.4"
    ipv4_subnet_mask           = "0.0.0.0"
    ipv4_secondary_addresses = [
      {
        address     = "1.2.3.5"
        subnet_mask = "0.0.0.0"
      }
    ]
    ipv4_dhcp_helper = ["1.2.3.4"]
    ipv6_dhcp_helpers = [
      {
        address           = "2001:0:0:1::0"
        dhcpv6_helper_vpn = 1
      }
    ]
    ipv4_nat               = false
    ipv4_nat_type          = "pool"
    ipv4_nat_range_start   = "1.2.3.4"
    ipv4_nat_range_end     = "4.5.6.7"
    ipv4_nat_prefix_length = 1
    ipv4_nat_overload      = true
    ipv4_nat_loopback      = "123"
    ipv4_nat_udp_timeout   = 123
    ipv4_nat_tcp_timeout   = 123
    static_nats = [
      {
        source_ip    = "1.2.3.4"
        translate_ip = "2.3.4.5"
        direction    = "inside"
        source_vpn   = 0
      }
    ]
    ipv6_nat         = true
    nat64            = false
    acl_shaping_rate = 12
    ipv6_vrrps = [
      {
        group_id  = 1
        priority  = 100
        timer     = 1000
        track_omp = false
        ipv6_addresses = [
          {
            link_local_address = "1::1"
            global_address     = "1::1/24"
          }
        ]
      }
    ]
    ipv4_vrrps = [
      {
        group_id  = 1
        priority  = 100
        timer     = 1000
        track_omp = false
        address   = "1.2.3.4"
        secondary_addresses = [
          {
            address     = "2.3.4.5"
            subnet_mask = "0.0.0.0"
          }
        ]
        tloc_prefix_change     = true
        tloc_pref_change_value = 100
      }
    ]
    arps = [
      {
        ip_address  = "1.2.3.4"
        mac_address = "00-B0-D0-63-C2-26"
      }
    ]
    trustsec_enable_sgt_propogation      = false
    trustsec_propogate                   = true
    trustsec_security_group_tag          = 123
    trustsec_enable_enforced_propogation = false
    trustsec_enforced_security_group_tag = 1234
    duplex                               = "full"
    mac_address                          = "00-B0-D0-63-C2-26"
    ip_mtu                               = 1500
    interface_mtu                        = 1500
    tcp_mss                              = 500
    speed                                = "1000"
    arp_timeout                          = 1200
    autonegotiate                        = false
    media_type                           = "auto-select"
    load_interval                        = 30
    tracker                              = "TRACKER1"
    icmp_redirect_disable                = true
    xconnect                             = "1"
    ip_directed_broadcast                = false
  }

  resource "sdwan_service_tracker_feature" "test-1" {
    name                  = "TF_TEST_1"
    description           = "Terraform test"
    feature_profile_id    = sdwan_service_feature_profile.test.id
    tracker_name          = "TRACKER_2"
    endpoint_api_url      = "google.com"
    endpoint_dns_name     = "google.com"
    endpoint_ip           = "1.2.3.4"
    protocol              = "tcp"
    port                  = 123
    interval              = 30
    multiplier            = 3
    threshold             = 300
    endpoint_tracker_type = "static-route"
    tracker_type          = "endpoint"
  }

  resource "sdwan_service_tracker_feature" "test-2" {
    name                  = "TF_TEST_2"
    description           = "Terraform test"
    feature_profile_id    = sdwan_service_feature_profile.test.id
    tracker_name          = "TRACKER_2"
    endpoint_api_url      = "google.com"
    endpoint_dns_name     = "google.com"
    endpoint_ip           = "1.2.3.4"
    protocol              = "tcp"
    port                  = 123
    interval              = 30
    multiplier            = 3
    threshold             = 300
    endpoint_tracker_type = "static-route"
    tracker_type          = "endpoint"
  }

  resource "sdwan_service_tracker_group_feature" "test" {
    name               = "TF_TEST_TRACKER_GROUP"
    description        = "Terraform test"
    feature_profile_id = sdwan_service_feature_profile.test.id
    tracker_elements = [
      {
        tracker_id = sdwan_service_tracker_feature.test-1.id
      },
      {
        tracker_id = sdwan_service_tracker_feature.test-2.id
      }
    ]
    tracker_boolean = "or"
  }